;; Sri Ganeshji : Sri Balaji : Sri Pitreshwarji : Sri Durgaji : Sri Venkateshwara

/*
Objective(s) - 
-	The objective of this program is to demonstrate the usage of Rule Set in the simplest way

Syntax -

[Rule Set: <RuleSetName>]
     
    Rule		: <RuleIdentifier> 		: <LogicalExpression>[:<LogicalValue>]

where,
	Rule name 			: This is developer defined
	LogicalExpression	: Any expression to be evaluted in context of requestor / source / target object being passed
	Logical Value 		: A constant value providing BreakOn condition. This is an optional parameter. 
						 If this parameter is not specified it will inherit the BreakOn attribute value

Last modification - 
-	Created on 02/12/2016

*/

[Report: TSPL RuleSet Filters]
	
	Form		: TSPL Smp RuleSetFilters
	Title		: "Rule Set with Filters"
	
[Form: TSPL Smp RuleSetFilters]
	
	Use			: TSPL SMP Illustration
	Local		: Field	: FormSubTitle		: Info		: "Illustration for Rule Set with Filters"
	Local		: Field	: TSPL Smp Purpose	: Info		: "     Attribute WalkOn is a Single attribute at Rule Set definition " +
			+ "While evaluating each rule, if a rule's result is True, the evaluation flow will continue evaluating the NEXT dimension (depth). " +
			+ "When Walk On is not specified irrespective of rules' result, evaluation flow will continue for next dimension, however, the same can " +
			+ "be overridden at the RuleSet by specifying the rules for applicability of RuleSet as well as subsequent Rule filters"
	Local		: Field	: TSPL Smp Syntax	: Info		: "[Rule Set : <RuleName>]" + 
	+ $$NewLine + "         RuleSet : <Rule Set Definition> : <ListofRuleNameIdentifierCurrentLevel>:<ListOfRuleNameIdentifierNextLevel>" + 
			+ $$NewLine + "         WalkOn : <LogicalValue>" 
	Part		: TSPL Smp SimpleRule
	Local		: Part		: TSPL Smp SimpleRule	: Delete	: Repeat
	Local		: Part		: TSPL Smp SimpleRule	: Add		: Repeat	: TSPL Smp SimpleRuleB	: TSPL Smp RuleSetFilters
	Local		: Field		: TSPL Smp SRCompute	: Set as	: @@TSPLChildValues
			
[Collection: TSPL Smp RuleSetFilters]
 
    Source Collection   : Ledger
    Fetch               : Name, Parent, IsBillWiseOn, OpeningBalance, LedgerContact, LedgerPhone
;; The same code could be written with multiple Compute Var. With Rule set introduction
;; we have written just one compute var and one compute for final result.
    Compute Var         : cvEvalRSValue     : FlagSet    : $$EvaluateRuleSet:TSPLSmpRuleSetFilters
	Compute             : EvalRSValue       : ##cvEvalRSValue
 
[Rule Set: TSPL Smp RuleSetFilters]
     
	Rule        : R1    : @IsLedOfGrpDebtors
	Rule        : R2    : $IsBillWiseOn
 
    LocalFormula: IsLedOfGrpDebtors      : ($$IsLedOfGrp:$Name:$$GroupSundryDebtors)
    LocalFormula: IsSubGroupofDebtors    : @IsLedOfGrpDebtors AND NOT ($Parent = $$GroupSundryDebtors)
	
    Rule Set    : TSPL RuleSetLevel1    : R1, R2    		: R7
;;				:<DefinitionRuleSet>	: <CurrentRules>	: <NextLevelRules>
    Rule Set    : TSPL RuleSetLevel1    : R1        		: R6
	
	WalkOn		: No
	
[Rule Set: TSPL RuleSetLevel1]
	
	Rule        : R6                : @IsLedStateKA
    Rule        : R7                : @IsLedBillsEmpty
         
    LocalFormula: IsLedStateKA      : $LedStateName = "Karnataka"
    LocalFormula: IsLedBillsEmpty   : $$NumItems:BillAllocations = 0
	
	
;; End of file